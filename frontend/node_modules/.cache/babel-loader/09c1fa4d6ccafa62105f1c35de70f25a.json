{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\T1000\\\\codes\\\\Week07-project fot unit 02\\\\New-Project_unit02\\\\project-unit-2\\\\frontend\\\\src\\\\components\\\\Patient\\\\LoginPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport '../../index.css';\nimport './login.css';\nimport { useContext } from 'react';\nimport { UserContext } from '../Home/UserContext';\nimport { Button } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const {\n    authenUser,\n    setAuthenUser\n  } = useContext(UserContext);\n  let navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [pass, setPass] = useState(''); //  Check if input in name and password is null\n\n  const onChangeHandler = (fieldName, value) => {\n    if (fieldName === 'name') {\n      setName(value);\n    } else if (fieldName === 'pass') {\n      setPass(value);\n    }\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    if (name.trim() === '' || pass.trim() === '') {\n      alert(\"required both field\");\n      swal({\n        title: \"required both field\",\n        icon: 'success'\n      });\n    } else {\n      swal({\n        title: 'Welcome ' + name,\n        icon: 'success'\n      });\n      setAuthenUser(true);\n      navigate('/');\n      setName('');\n      setPass('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Patientlogin\",\n      onSubmit: e => {\n        onSubmitHandler(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login page  for Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Enter your userName\",\n        name: \"userName\",\n        onChange: e => {\n          onChangeHandler('name', e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        name: \"password\",\n        required: true,\n        onChange: e => {\n          onChangeHandler('pass', e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: onSubmitHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"0z0/E+EjVEYN8QyerNjRdnNu0KA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/T1000/codes/Week07-project fot unit 02/New-Project_unit02/project-unit-2/frontend/src/components/Patient/LoginPatient.js"],"names":["React","useState","BrowserRouter","Router","Routes","Route","Link","useContext","UserContext","Button","swal","useNavigate","Login","authenUser","setAuthenUser","navigate","name","setName","pass","setPass","onChangeHandler","fieldName","value","onSubmitHandler","e","preventDefault","trim","alert","title","icon","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {BrowserRouter as Router , Routes ,Route,Link} from 'react-router-dom'\r\nimport '../../index.css'\r\nimport './login.css'\r\nimport { useContext } from 'react'\r\nimport { UserContext } from '../Home/UserContext'\r\nimport { Button } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n\r\n    const {authenUser ,setAuthenUser} = useContext(UserContext)\r\n\r\n    let navigate=useNavigate();\r\n\r\n const [name ,setName] =useState('');\r\n const [pass ,setPass] =useState(''); \r\n\r\n//  Check if input in name and password is null\r\nconst onChangeHandler =(fieldName ,value)=>{\r\n    if(fieldName==='name'){\r\n      setName(value)\r\n    }\r\n  \r\n    else if(fieldName ==='pass'){\r\n      setPass(value)\r\n    }\r\n  }\r\n\r\n  const onSubmitHandler = (e)=>{\r\n    e.preventDefault();\r\n  \r\n  \r\n    if(name.trim() === '' || pass.trim() ===''){\r\n  \r\n      alert(\"required both field\");\r\n      swal({\r\n        title: \"required both field\",\r\n        icon:'success'\r\n      })\r\n    }\r\n    else\r\n    {\r\n      swal({\r\n        title:'Welcome '+ name,\r\n        icon:'success'\r\n      })\r\n      setAuthenUser(true)\r\n  \r\n          navigate('/')\r\n          setName('')\r\n          setPass('')\r\n  }\r\n  }\r\n\r\n\r\nreturn(\r\n    <>\r\n     \r\n\r\n     \r\n    <form className='Patientlogin' onSubmit={(e)=>{onSubmitHandler(e)}}>\r\n    <h1>Login page  for Patient</h1>\r\n\r\n     \r\n        <input \r\n        type='text'\r\n        required\r\n         placeholder='Enter your userName'\r\n         name='userName'\r\n         onChange={(e)=>{onChangeHandler('name',e.target.value)}}\r\n         \r\n         />\r\n        <input\r\n         type='password'\r\n          placeholder='Enter your password' \r\n          name='password'\r\n          required\r\n          onChange={(e)=>{onChangeHandler('pass',e.target.value)}}\r\n          />\r\n       \r\n       \r\n           \r\n       \r\n            \r\n         \r\n\r\n       <input type='submit' onClick={onSubmitHandler}/> \r\n               \r\n            \r\n           \r\n        \r\n    </form>\r\n    \r\n    </>\r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}