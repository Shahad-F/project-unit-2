{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\T1000\\\\codes\\\\Week07-project fot unit 02\\\\New-Project_unit02\\\\project-unit-2\\\\frontend\\\\src\\\\components\\\\Admin\\\\LoginAdministrator.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport './Admin.css';\nimport { useContext, useState } from 'react';\nimport { UserContext } from '../Home/UserContext';\nimport { Button } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginAdmin() {\n  _s();\n\n  const {\n    authen,\n    setAuthen\n  } = useContext(UserContext);\n  let navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [pass, setPass] = useState(''); //  Check if input in name and password is null\n\n  const onChangeHandler = (fieldName, value) => {\n    if (fieldName === 'name') {\n      setName(value);\n    } else if (fieldName === 'pass') {\n      setPass(value);\n    }\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    if (name.trim() === '' || pass.trim() === '') {\n      alert(\"required both field\");\n    } else {\n      swal({\n        title: 'Welcome ' + name,\n        icon: 'success'\n      });\n      setAuthen(true);\n      navigate('/');\n      setName('');\n      setPass('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BigLogin\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login\",\n        onSubmit: e => {\n          onSubmitHandler(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login for Admin \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your userName\",\n          value: name,\n          onChange: e => {\n            onChangeHandler('name', e.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: pass,\n          onChange: e => {\n            onChangeHandler('pass', e.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: onSubmitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginAdmin, \"YNZVhsAeuK8Hg2APss7MB/UCjvg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginAdmin\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/T1000/codes/Week07-project fot unit 02/New-Project_unit02/project-unit-2/frontend/src/components/Admin/LoginAdministrator.js"],"names":["BrowserRouter","Router","Routes","Route","Link","useContext","useState","UserContext","Button","swal","useNavigate","LoginAdmin","authen","setAuthen","navigate","name","setName","pass","setPass","onChangeHandler","fieldName","value","onSubmitHandler","e","preventDefault","trim","alert","title","icon","target"],"mappings":"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","sourcesContent":["  import {BrowserRouter as Router , Routes ,Route,Link} from 'react-router-dom'\r\nimport './Admin.css'\r\nimport { useContext, useState } from 'react'\r\nimport { UserContext } from '../Home/UserContext'\r\nimport { Button } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function LoginAdmin(){\r\n\r\nconst {authen ,setAuthen} = useContext(UserContext)\r\n\r\n let navigate=useNavigate();\r\n\r\n const [name ,setName] =useState('');\r\n const [pass ,setPass] =useState(''); \r\n\r\n\r\n\r\n//  Check if input in name and password is null\r\nconst onChangeHandler =(fieldName ,value)=>{\r\n  if(fieldName==='name'){\r\n    setName(value)\r\n  }\r\n\r\n  else if(fieldName ==='pass'){\r\n    setPass(value)\r\n  }\r\n}\r\n\r\nconst onSubmitHandler = (e)=>{\r\n  e.preventDefault();\r\n\r\n\r\n  if(name.trim() === '' || pass.trim() ===''){\r\n\r\n    alert(\"required both field\");\r\n  }\r\n  else\r\n  {\r\n    swal({\r\n      title:'Welcome '+ name,\r\n      icon:'success'\r\n    })\r\n        setAuthen(true)\r\n\r\n        navigate('/')\r\n        setName('')\r\n        setPass('')\r\n}\r\n}\r\n\r\n    return(\r\n\r\n        <>\r\n \r\n        <div className='BigLogin'> \r\n\r\n        <form className='login' onSubmit={(e)=>{onSubmitHandler(e)}}>\r\n    \r\n    <h1>Login for Admin </h1>\r\n\r\n    <input\r\n     type='text'\r\n      placeholder='Enter your userName'\r\n     \r\n     value={name}\r\n     onChange={(e)=>{onChangeHandler('name',e.target.value)}}\r\n     required\r\n     />\r\n\r\n    <input\r\n      type='password'\r\n      placeholder='Enter your password'\r\n       \r\n      value={pass}\r\n      onChange={(e)=>{onChangeHandler('pass',e.target.value)}}\r\n    \r\n      required\r\n      />\r\n    \r\n       \r\n    \r\n{/* { function(){\r\n\r\n      if(value !== '') */}\r\n\r\n      {/* { return( */}\r\n      \r\n          \r\n          \r\n             <input type='submit' onClick={onSubmitHandler}/> \r\n         \r\n      {/* )\r\n      \r\n          \r\n      }\r\n}()} */}\r\n         \r\n         \r\n        \r\n       \r\n          \r\n       \r\n       </form>\r\n      \r\n     </div>\r\n      \r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}